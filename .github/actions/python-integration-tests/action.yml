name: "Integration Tests"
description: "Run integration tests"
inputs:
  python-version:
    description: "Python version"
    required: true
  docker_username:
    description: "Docker username"
    required: true
  docker_password:
    description: "Docker password"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"

    - name: Install poetry
      run: pipx install poetry==$POETRY_VERSION
      shell: bash
      working-directory: python

    - name: Install dependencies
      run: poetry install
      shell: bash
      working-directory: python

    - name: Log in to docker
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_password }}

    - name: Run integration tests
      env:
        LANGCHAIN_ENDPOINT: http://127.0.0.1:1984
      run: |
        poetry run langsmith start --dev
        poetry run langsmith status
        sleep 5
        counter=0
        max_tries=20
        while true; do
          response=$(curl -f --write-out '%{http_code}' --silent --output /dev/null http://127.0.0.1:1984/tenants || true)
          if [ "$response" -eq 200 ]; then
            echo "Service is up!"
            break
          fi
          ((counter++))
          if [ $counter -ge $max_tries ]; then
            echo "Service did not start within the expected time."
            exit 1
          fi
          sleep 3
        done
        make integration_tests
      shell: bash
      working-directory: python
