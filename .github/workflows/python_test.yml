name: Python CI

on:
  push:
    branches: [main]
    paths:
      - "python/**"
  pull_request:
    paths:
      - "python/**"
  workflow_dispatch:

env:
  POETRY_VERSION: "1.4.2"

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.11"
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Install poetry
        run: pipx install poetry==$POETRY_VERSION
      - name: Install dependencies
        run: poetry install

  lint:
    needs: build
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.build.outputs.python-version }}
          cache: "pip"
      - name: Install poetry
        run: pipx install poetry==$POETRY_VERSION
      - name: Install dependencies
        run: |
          poetry install --with dev,lint
          poetry run pip install -U langchain
      - name: Analysing the code with our lint
        run: make lint

  test:
    needs: build
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.build.outputs.python-version }}
          cache: "pip"
      - name: Install poetry
        run: pipx install poetry==$POETRY_VERSION
      - name: Install dependencies
        run: |
          poetry install --with dev
          poetry run pip install -U langchain
      - name: Run tests
        run: make tests
        shell: bash
