components:
  schemas:
    ChatCompletionFunctionCallOption:
      properties:
        name:
          type: string
      type: object
    ChatCompletionFunctionParameters:
      additionalProperties: true
      type: object
    ChatCompletionFunctions:
      properties:
        description:
          type: string
        name:
          type: string
        parameters:
          $ref: '#/components/schemas/ChatCompletionFunctionParameters'
      type: object
    ChatCompletionRequestMessage:
      properties:
        content:
          nullable: true
          type: string
        function_call:
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          required:
          - name
          - arguments
          type: object
        name:
          type: string
        role:
          enum:
          - system
          - user
          - assistant
          - function
          type: string
      type: object
    ChatCompletionResponseMessage:
      properties:
        content:
          nullable: true
          type: string
        function_call:
          properties:
            arguments:
              description: The arguments to call the function with, as generated by
                the model in JSON format. Note that the model does not always generate
                valid JSON, and may hallucinate parameters not defined by your function
                schema. Validate the arguments in your code before calling your function.
              type: string
            name:
              description: The name of the function to call.
              type: string
          required:
          - name
          - arguments
          type: object
        role:
          enum:
          - system
          - user
          - assistant
          - function
          type: string
      type: object
    CompletionUsage:
      properties:
        completion_tokens:
          type: integer
        prompt_tokens:
          type: integer
        total_tokens:
          type: integer
      type: object
    CreateChatCompletionRequest:
      properties:
        frequency_penalty:
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        function_call:
          oneOf:
          - enum:
            - none
            - auto
            type: string
          - $ref: '#/components/schemas/ChatCompletionFunctionCallOption'
        functions:
          items:
            $ref: '#/components/schemas/ChatCompletionFunctions'
          minItems: 1
          type: array
        logit_bias:
          additionalProperties:
            type: integer
          nullable: true
          type: object
          x-oaiTypeLabel: map
        max_tokens:
          type: integer
        messages:
          items:
            $ref: '#/components/schemas/ChatCompletionRequestMessage'
          minItems: 1
          type: array
        model:
          anyOf:
          - type: string
          - enum:
            - gpt-4
            - gpt-4-0314
            - gpt-4-0613
            - gpt-4-32k
            - gpt-4-32k-0314
            - gpt-4-32k-0613
            - gpt-3.5-turbo
            - gpt-3.5-turbo-16k
            - gpt-3.5-turbo-0301
            - gpt-3.5-turbo-0613
            - gpt-3.5-turbo-16k-0613
            type: string
          example: gpt-3.5-turbo
          x-oaiTypeLabel: string
        n:
          example: 1
          maximum: 128
          minimum: 1
          nullable: true
          type: integer
        presence_penalty:
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        stop:
          oneOf:
          - nullable: true
            type: string
          - items:
              type: string
            maxItems: 4
            minItems: 1
            type: array
        stream:
          nullable: true
          type: boolean
        temperature:
          example: 1
          maximum: 2
          minimum: 0
          nullable: true
          type: number
        top_p:
          example: 1
          maximum: 1
          minimum: 0
          nullable: true
          type: number
        user: &id001
          example: user-1234
          type: string
      type: object
    CreateChatCompletionResponse:
      properties:
        choices:
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  `length` if the maximum number of tokens specified in the request
                  was reached, or `function_call` if the model called a function.

                  '
                enum:
                - stop
                - length
                - function_call
                type: string
              index:
                description: The index of the choice in the list of choices.
                type: integer
              message:
                $ref: '#/components/schemas/ChatCompletionResponseMessage'
            required:
            - index
            - message
            - finish_reason
            type: object
          type: array
        created:
          type: integer
        id:
          type: string
        model:
          type: string
        object:
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"chatcmpl-123\",\n  \"object\": \"chat.completion\"\
          ,\n  \"created\": 1677652288,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"\
          choices\": [{\n    \"index\": 0,\n    \"message\": {\n      \"role\": \"\
          assistant\",\n      \"content\": \"\\n\\nHello there, how may I assist you\
          \ today?\",\n    },\n    \"finish_reason\": \"stop\"\n  }],\n  \"usage\"\
          : {\n    \"prompt_tokens\": 9,\n    \"completion_tokens\": 12,\n    \"total_tokens\"\
          : 21\n  }\n}\n"
        group: chat
        name: The chat completion object
    CreateCompletionRequest:
      properties:
        best_of:
          maximum: 20
          minimum: 0
          nullable: true
          type: integer
        echo:
          nullable: true
          type: boolean
        frequency_penalty:
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        logit_bias:
          additionalProperties:
            type: integer
          nullable: true
          type: object
          x-oaiTypeLabel: map
        logprobs:
          maximum: 5
          minimum: 0
          nullable: true
          type: integer
        max_tokens:
          example: 16
          minimum: 0
          nullable: true
          type: integer
        model:
          anyOf:
          - type: string
          - enum:
            - text-davinci-003
            - text-davinci-002
            - text-davinci-001
            - code-davinci-002
            - text-curie-001
            - text-babbage-001
            - text-ada-001
            type: string
          x-oaiTypeLabel: string
        n:
          example: 1
          maximum: 128
          minimum: 1
          nullable: true
          type: integer
        presence_penalty:
          maximum: 2
          minimum: -2
          nullable: true
          type: number
        prompt:
          nullable: true
          oneOf:
          - default: ''
            example: This is a test.
            type: string
          - items:
              default: ''
              example: This is a test.
              type: string
            type: array
          - example: '[1212, 318, 257, 1332, 13]'
            items:
              type: integer
            minItems: 1
            type: array
          - example: '[[1212, 318, 257, 1332, 13]]'
            items:
              items:
                type: integer
              minItems: 1
              type: array
            minItems: 1
            type: array
        stop:
          nullable: true
          oneOf:
          - default: <|endoftext|>
            example: '

              '
            nullable: true
            type: string
          - items:
              example: '["\n"]'
              type: string
            maxItems: 4
            minItems: 1
            type: array
        stream:
          nullable: true
          type: boolean
        suffix:
          example: test.
          nullable: true
          type: string
        temperature:
          example: 1
          maximum: 2
          minimum: 0
          nullable: true
          type: number
        top_p:
          example: 1
          maximum: 1
          minimum: 0
          nullable: true
          type: number
        user: *id001
      type: object
    CreateCompletionResponse:
      properties:
        choices:
          items:
            properties:
              finish_reason:
                description: 'The reason the model stopped generating tokens. This
                  will be `stop` if the model hit a natural stop point or a provided
                  stop sequence,

                  or `length` if the maximum number of tokens specified in the request
                  was reached.

                  '
                enum:
                - stop
                - length
                type: string
              index:
                type: integer
              logprobs:
                nullable: true
                properties:
                  text_offset:
                    items:
                      type: integer
                    type: array
                  token_logprobs:
                    items:
                      type: number
                    type: array
                  tokens:
                    items:
                      type: string
                    type: array
                  top_logprobs:
                    items:
                      additionalProperties:
                        type: integer
                      type: object
                    type: array
                type: object
              text:
                type: string
            required:
            - text
            - index
            - logprobs
            - finish_reason
            type: object
          type: array
        created:
          type: integer
        id:
          type: string
        model:
          type: string
        object:
          type: string
        usage:
          $ref: '#/components/schemas/CompletionUsage'
      type: object
      x-oaiMeta:
        example: "{\n  \"id\": \"cmpl-uqkvlQyYK7bGYrRHQ0eXlWi7\",\n  \"object\": \"\
          text_completion\",\n  \"created\": 1589478378,\n  \"model\": \"gpt-3.5-turbo\"\
          ,\n  \"choices\": [\n    {\n      \"text\": \"\\n\\nThis is indeed a test\"\
          ,\n      \"index\": 0,\n      \"logprobs\": null,\n      \"finish_reason\"\
          : \"length\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 5,\n \
          \   \"completion_tokens\": 7,\n    \"total_tokens\": 12\n  }\n}\n"
        name: The completion object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    RunCreateSchema:
      description: Create class for a Run object.
      properties:
        child_runs:
          items:
            $ref: '#/components/schemas/RunCreateSchema'
          title: Child Runs
          type: array
        end_time:
          format: date-time
          title: End Time
          type: string
        error:
          title: Error
          type: string
        events:
          items:
            type: object
          title: Events
          type: array
        execution_order:
          default: 1
          minimum: 1.0
          title: Execution Order
          type: integer
        extra:
          title: Extra
          type: object
        id:
          format: uuid
          title: Id
          type: string
        inputs:
          anyOf:
          - type: object
          - $ref: '#/components/schemas/CreateChatCompletionRequest'
          - $ref: '#/components/schemas/CreateCompletionRequest'
          title: Inputs
        manifest_id:
          format: uuid
          title: Manifest Id
          type: string
        name:
          title: Name
          type: string
        outputs:
          anyOf:
          - type: object
          - $ref: '#/components/schemas/CreateChatCompletionResponse'
          - $ref: '#/components/schemas/CreateCompletionResponse'
          title: Outputs
        parent_run_id:
          format: uuid
          title: Parent Run Id
          type: string
        reference_example_id:
          format: uuid
          title: Reference Example Id
          type: string
        run_type:
          $ref: '#/components/schemas/RunTypeEnum'
        serialized:
          title: Serialized
          type: object
        session_id:
          format: uuid
          title: Session Id
          type: string
        session_name:
          title: Session Name
          type: string
        start_time:
          format: date-time
          title: Start Time
          type: string
        tags:
          items:
            type: string
          title: Tags
          type: array
      required:
      - name
      - run_type
      title: RunCreateSchema
      type: object
    RunTypeEnum:
      description: Enum for run types.
      enum:
      - tool
      - chain
      - llm
      - retriever
      - embedding
      - prompt
      - parser
      title: RunTypeEnum
      type: string
    RunUpdateSchema:
      properties:
        end_time:
          format: date-time
          title: End Time
          type: string
        error:
          title: Error
          type: string
        events:
          items:
            type: object
          title: Events
          type: array
        inputs:
          anyOf:
          - type: object
          - $ref: '#/components/schemas/CreateChatCompletionRequest'
          - $ref: '#/components/schemas/CreateCompletionRequest'
          title: Inputs
        outputs:
          anyOf:
          - type: object
          - $ref: '#/components/schemas/CreateChatCompletionResponse'
          - $ref: '#/components/schemas/CreateCompletionResponse'
          title: Outputs
      title: RunUpdateSchema
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
info:
  title: LangChainPlus
  version: 0.1.0
openapi: 3.0.2
paths:
  /runs:
    post:
      description: Create a new run.
      operationId: create_run_runs_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunCreateSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Tenant ID: []
      - Bearer Auth: []
      summary: Create Run
      tags:
      - run
  /runs/{run_id}:
    patch:
      description: Update a run.
      operationId: update_run_runs__run_id__patch
      parameters:
      - in: path
        name: run_id
        required: true
        schema:
          format: uuid
          title: Run Id
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunUpdateSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - Tenant ID: []
      - Bearer Auth: []
      summary: Update Run
      tags:
      - run
